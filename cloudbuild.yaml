steps:
- name: bash
  entrypoint: "bash"
  args: ['-c', 'echo PG_HOST=$$PG_HOST_SECRET > ./.env']
  secretEnv: ['PG_HOST_SECRET']

- name: bash
  entrypoint: "bash"
  args: ['-c', 'echo PG_USER=$$PG_USER_SECRET >> ./.env']
  secretEnv: ['PG_USER_SECRET']

- name: bash
  entrypoint: "bash"
  args: ['-c', 'echo PG_PASSWORD=$$PG_PASSWORD_SECRET >> ./.env']
  secretEnv: ['PG_PASSWORD_SECRET']

- name: bash
  entrypoint: "bash"
  args: ['-c', 'echo PG_PORT=5432 >> ./.env']

- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/crypto-arbitrage-dashboard-backend:latest', '.' ]

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/crypto-arbitrage-dashboard-backend:latest']

# - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#   entrypoint: gcloud
#   args: ['run', 'deploy', 'crypto-arbitrage-dashboard-backend', '--image', 'gcr.io/$PROJECT_ID/crypto-arbitrage-dashboard-backend:1.0', '--region', 'us-central1', '--vpc-connector', 'default-vpc-connector']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - run
  - deploy
  - crypto-arbitrage-dashboard-backend
  - --image=gcr.io/$PROJECT_ID/crypto-arbitrage-dashboard-backend:latest
  - --region=us-central1
  - --min-instances=0
  - --max-instances=1
  - --memory=128Mi
  - --port=8080
  - --add-cloudsql-instances=crypto-arbitrage-347617:us-central1:main
  - --ingress=all
  # - --vpc-connector=default-vpc-connector

images:
- gcr.io/$PROJECT_ID/crypto-arbitrage-dashboard-backend:latest

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/PG_HOST/versions/latest
    env: 'PG_HOST_SECRET'
  - versionName: projects/$PROJECT_ID/secrets/PG_USER/versions/latest
    env: 'PG_USER_SECRET'
  - versionName: projects/$PROJECT_ID/secrets/PG_PASSWORD/versions/latest
    env: 'PG_PASSWORD_SECRET'